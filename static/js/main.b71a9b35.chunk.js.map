{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","console","log","Content","Cover","bgImage","Data","h3","ItemContainer","Item","Divider","Overview","p","Backdrop","Youtube","iframe","ProductorContainer","Productor","img","Imdb","Seasons","SeasonPoster","DetailPresenter","result","backdrop_path","runtime","number_of_episodes","genres","genre","index","name","original_language","production_countries","country","overview","imdb_id","href","videos","src","key","seasons","season","production_companies","company","logo_path","alt","DetailContainer","pathname","location","includes","match","push","history","parsedId","Number","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","tv","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b71a9b35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"d4ffd2e525045eaabfa9799baaf539e6\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰⏰⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  font-size: 12px;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(0, 20)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find Movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\",\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#e74c3c\" />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text=\"Nothing Found\" color=\"#bdc3c7\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n  margin-bottom: 100px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  height: 100%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Youtube = styled.iframe`\r\n  margin: 50px;\r\n  width: 60%;\r\n  height: 60%;\r\n`;\r\n\r\nconst ProductorContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin-top: 30px;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  height: 50px;\r\n  color: black;\r\n  font-size: 24px;\r\n  justify-content: center;\r\n`;\r\nconst Productor = styled.img`\r\n  height: 70%;\r\n  margin: 0px 20px;\r\n`;\r\n\r\nconst Imdb = styled.a`\r\n  display: flex;\r\n  border: 2px solid black;\r\n  border-radius: 4px;\r\n  width: 50px;\r\n  height: 25px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #e2b616;\r\n  color: black;\r\n  font-weight: 600;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Seasons = styled.div`\r\n  margin-top: 300px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst SeasonPoster = styled.div`\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  margin: 20px;\r\n  height: 140px;\r\n  width: 90px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date\r\n                : result.first_air_date}\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? `${result.runtime} min`\r\n                : `${result.number_of_episodes} episodes`}\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>{result.original_language}</Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.production_countries &&\r\n                result.production_countries.map((country, index) =>\r\n                  index === result.production_countries.length - 1\r\n                    ? country.name\r\n                    : `${country.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n          {result.imdb_id && (\r\n            <Imdb\r\n              href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n              target=\"_blank\"\r\n            >\r\n              IMDb\r\n            </Imdb>\r\n          )}\r\n          {result.videos.results && result.videos.results.length > 0 && (\r\n            <Youtube\r\n              src={`https://www.youtube.com/embed/${result.videos.results[0].key}`}\r\n            />\r\n          )}\r\n        </Data>\r\n      </Content>{\" \"}\r\n      <Seasons>\r\n        {result.seasons &&\r\n          result.seasons.length > 0 &&\r\n          result.seasons.map((season) => (\r\n            <SeasonPoster\r\n              bgImage={\r\n                season.poster_path\r\n                  ? `https://image.tmdb.org/t/p/original${season.poster_path}`\r\n                  : require(\"../../assets/noPosterSmall.png\")\r\n              }\r\n            />\r\n          ))}\r\n      </Seasons>\r\n      <ProductorContainer>\r\n        {console.log(result)}\r\n        {result?.production_companies &&\r\n          result.production_companies.map((company) =>\r\n            company.logo_path ? (\r\n              <Productor\r\n                src={`https://image.tmdb.org/t/p/original${company.logo_path}`}\r\n                alt={company.name}\r\n              />\r\n            ) : (\r\n              <>{company.name}</>\r\n            )\r\n          )}\r\n      </ProductorContainer>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = Number(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 4px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.2s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport tv from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"Components/Header\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={tv} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}